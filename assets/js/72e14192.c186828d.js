"use strict";(self.webpackChunkdocs_src=self.webpackChunkdocs_src||[]).push([[814],{1953:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"quick-start","title":"Quick Start","description":"Follow these steps to get up and running with EvalSharp in minutes.","source":"@site/docs/quick-start.md","sourceDirName":".","slug":"/quick-start","permalink":"/EvalSharpSite/docs/quick-start","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Introduction","permalink":"/EvalSharpSite/docs/introduction"}}');var a=n(4848),i=n(8453);const r={},l="Quick Start",o={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Create a .NET Project",id:"1-create-a-net-project",level:2},{value:"2. Install EvalSharp",id:"2-install-evalsharp",level:2},{value:"3. Prepare Your Data",id:"3-prepare-your-data",level:2},{value:"4. Evaluate Multiple Tests with the Evaluator",id:"4-evaluate-multiple-tests-with-the-evaluator",level:2},{value:"5. Run Your Evaluation",id:"5-run-your-evaluation",level:2},{value:"6. Evaluate a Single Test in Unit Tests with <code>EvalTest.AssertAsync</code>",id:"6-evaluate-a-single-test-in-unit-tests-with-evaltestassertasync",level:2},{value:"That&#39;s It! \ud83c\udf89",id:"thats-it-",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,a.jsx)(t.p,{children:"Follow these steps to get up and running with EvalSharp in minutes."}),"\n",(0,a.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:".NET SDK 8.0 or later"}),"\n",(0,a.jsx)(t.li,{children:"A code editor or IDE (e.g., Visual Studio, Visual Studio Code)"}),"\n",(0,a.jsxs)(t.li,{children:["(Optional) An API key (e.g., ",(0,a.jsx)(t.code,{children:"OPENAI_API_KEY"}),") for LLM\u2011evaluated metrics"]}),"\n"]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"1-create-a-net-project",children:"1. Create a .NET Project"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"mkdir EvalSample\ncd EvalSample\ndotnet new console\n"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"2-install-evalsharp",children:"2. Install EvalSharp"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"dotnet add package EvalSharp\n"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"3-prepare-your-data",children:"3. Prepare Your Data"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'using System.Text.Json.Serialization;\n\npublic class SummaryInputOutput\n{\n    [JsonPropertyName("input")]\n    public required string Input { get; set; }\n    [JsonPropertyName("actual_output")]\n    public required string ActualOutput { get; set; }\n    [JsonPropertyName("expected_output")]\n    public required string ExpectedOutput { get; set; }\n\n    public static string TestDataSet = "Your JSON dataset here";\n}\n'})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"4-evaluate-multiple-tests-with-the-evaluator",children:"4. Evaluate Multiple Tests with the Evaluator"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"Evaluator"})," is designed to run evaluations over a set of tests with minimal setup. This is ideal for running and scoring entire datasets."]}),"\n",(0,a.jsxs)(t.p,{children:["Open ",(0,a.jsx)(t.code,{children:"Program.cs"})," (or your main application file) and replace its contents with:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'using EvalSharp;\nusing EvalSharp.Scoring;\n\nnamespace EvalSample\n{\n    class Program\n    {\n        static async Task Main()\n        {\n            // 1. Load your test data\n            var tests = SummaryInputOutput.TestDataSet;\n\n            // 2. Initialize the Evaluator with your LLM, test data, and mapping\n            var evaluator = Evaluator.FromJson<SummaryInputOutput>(ChatClient.GetInstance(), tests, test => new EvaluatorTestData\n            {\n                InitialInput = test.Input,\n                ActualOutput = test.ActualOutput,\n            });\n\n            // 3. Choose your metrics\n            evaluator.AddGEval(criteria: "Does the output correctly explain concepts, events, or processes based on the input prompt?");\n            evaluator.AddAnswerRelevancy();\n\n            // 4. Run the evaluator. Results automatically print to the console.\n            var result = await evaluator.RunAsync();\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"5-run-your-evaluation",children:"5. Run Your Evaluation"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"dotnet run\n"})}),"\n",(0,a.jsx)(t.p,{children:"You'll see output similar to:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"You're running EvalSharps's GEval Metric!(using gpt-4.1-mini, strict = False, async_mode = True)...\nYou're running EvalSharps's AnswerRelevancy Metric!(using gpt-4.1-mini, strict = False, async_mode = True)...\nEvaluating 10 test case(s) in parallel:\n                                                     Test Results\n                                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                        \u2502 Test case \u2502 AnswerRelevancy \u2502 GEval \u2502\n                                        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                                        \u2502 1         \u2502 \u2705              | \u2705   \u2502\n                                        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                                        \u2502 2         \u2502 \u2705              \u2502 \u2705   \u2502\n                                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                     Metric Results\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Metric          \u2502 Score                                                              \u2502 Status \u2502 Overall Success Rate \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 AnswerRelevancy \u2502 10 (threshold=0.5, strict: False, evaluation model=gpt-4.1-mini)   \u2502 Pass   \u2502 100.0%               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 GEval           \u2502 8.523471008249098 (threshold=0.5, strict: False, evaluation        \u2502 Pass   \u2502 85.23471008249098.0% \u2502\n\u2502                 \u2502 model=gpt-4.1-mini)                                                \u2502        \u2502                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n======================================================================\n\nMetrics Summary\n\n  - \u2705 (AnswerRelevancy) (score: 1\n, threshold: 0.5, strict: False, reason: The score is 1.00 because the response fully addresses the UN's concerns about\nthe global economic challenges, including unemployment, poverty, and supply chain issues, and highlights the need for\nfiscal support and sustainable development without any irrelevant information., error: None)\n  - \u2705 (GEval) (score: 0.8924141813188683\n, threshold: 0.5, strict: False, reason: The Actual Output accurately summarizes the Initial Input, mentioning the UN's\nwarning about global economic challenges due to the pandemic, including unemployment, poverty, and supply chain\ndisruptions. It also reflects the note on some countries recovering, lingering uncertainty, and the emphasis on fiscal\nsupport and sustainable development policies. However, it is slightly less detailed and does not mention deep recessions\nexplicitly or urge governments strongly, resulting in a minor deduction., error: None)\n\nFor test case:\n\n  - input: The United Nations has warned that the global economy is facing severe challenges, with many countries\nexperiencing deep recessions due to the ongoing pandemic. In a new report, the UN highlights the increasing unemployment\nrates, widespread poverty, and disruptions to supply chains. While some countries are beginning to show signs of\nrecovery, the overall situation remains uncertain. Governments are urged to prioritize fiscal support and sustainable\ndevelopment policies to avoid long-term economic stagnation.\n  - actual output: The UN has warned about global economic challenges caused by the pandemic, highlighting issues such\nas unemployment, poverty, and supply chain disruptions. Some countries are recovering, but uncertainty remains, with an\nemphasis on fiscal support and sustainable development.\n  - expected output: None\n  - context: None\n  - retrieval context: None\n======================================================================\n...\n"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsxs)(t.h2,{id:"6-evaluate-a-single-test-in-unit-tests-with-evaltestassertasync",children:["6. Evaluate a Single Test in Unit Tests with ",(0,a.jsx)(t.code,{children:"EvalTest.AssertAsync"})]}),"\n",(0,a.jsxs)(t.p,{children:["In addition to evaluating large datasets, you can easily evaluate a single test with multiple metrics directly in your unit tests using ",(0,a.jsx)(t.code,{children:"EvalTest.AssertAsync"}),". This is perfect for testing specific scenarios or including evaluation logic in your automated test suites."]}),"\n",(0,a.jsx)(t.p,{children:"Example with multiple metrics:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'using EvalSharp.Models;\nusing EvalSharp.Scoring;\nusing Xunit.Abstractions;\n\npublic class MyEvalTests\n{\n    private readonly ITestOutputHelper _testOutputHelper;\n    public MyEvalTests(ITestOutputHelper testOutputHelper)\n    {\n        _testOutputHelper = testOutputHelper;\n    }\n\n    [Fact]\n    public async Task SingleTest_MultipleMetrics()\n    {\n        var context = new EvaluatorTestData\n        {\n            InitialInput = "Summarize the meeting.",\n            ActualOutput = "The meeting summary is provided below...",\n        };\n\n        var metrics = new List<Metric>\n        {\n            new AnswerRelevancyMetric(ChatClient.GetInstance(), new AnswerRelevancyMetricConfiguration { Threshold = 0.9 }),\n            new GEvalMetric(ChatClient.GetInstance(), new GEvalMetricConfiguration { Threshold = 0.5, Criteria = "Does the output correctly explain concepts, events, or processes based on the input prompt?" })\n        };\n\n        await EvalTest.AssertAsync(context, metrics, _testOutputHelper.WriteLine);\n    }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"You'll see output similar to:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"\u274c\u2009EvalSharp.Tests.EvalAssertTests.Testing_Assert_Two_Tests\n  \u2009Source:\u2009EvalAssertTests.cs\u2009line\u200919\n  \u2009Duration:\u20094.2 sec\n\n  Message:\u2009\nEvalSharp.Exceptions.EvalFailException : Metrics: GEval (score: 0.06, threshold: 0.5, strict: False) failed.\n\n  Stack Trace:\u2009\nEvalTest.AssertAsync(EvaluatorTestData testData, List`1 metrics, Action`1 sink)\u2009line\u200976\nEvalAssertTests.Testing_Assert_Two_Tests()\u2009line\u200947\n--- End of stack trace from previous location ---\n\n  Standard Output:\u2009\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Test case \u2502 Metric          \u2502 Score                                                                          \u2502 Status \u2502 Overall Success Rate \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1         \u2502 AnswerRelevancy \u2502 1 (threshold=0.9, evaluation model=gpt-4.1-mini, reason=The score is 1.00      \u2502 Pass   \u2502 53.22%               \u2502\n\u2502           \u2502                 \u2502 because the response fully addresses the request to summarize the meeting with \u2502        \u2502                      \u2502\n\u2502           \u2502                 \u2502 no irrelevant statements, providing a clear and concise summary.)              \u2502        \u2502                      \u2502\n\u2502           \u2502 GEval           \u2502 0.06444263535522285 (threshold=0.5, evaluation model=gpt-4.1-mini, reason=The  \u2502 Fail   \u2502                      \u2502\n\u2502           \u2502                 \u2502 Actual Output does not provide any content beyond a placeholder statement      \u2502        \u2502                      \u2502\n\u2502           \u2502                 \u2502 ('The meeting summary is provided below...'), whereas the Expected Output is   \u2502        \u2502                      \u2502\n\u2502           \u2502                 \u2502 empty. This indicates a failure to summarize the meeting as requested,         \u2502        \u2502                      \u2502\n\u2502           \u2502                 \u2502 resulting in a score near the bottom.)                                         \u2502        \u2502                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n"})}),"\n",(0,a.jsxs)(t.p,{children:["\u2705 With ",(0,a.jsx)(t.code,{children:"EvalTest.AssertAsync"}),", you can:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Assert against multiple metrics in a single call"}),"\n",(0,a.jsxs)(t.li,{children:["Output results to any desired sink (e.g., ",(0,a.jsx)(t.code,{children:"Console.WriteLine"}),", test output helpers)"]}),"\n",(0,a.jsx)(t.li,{children:"Quickly integrate EvalSharp into existing unit tests without full dataset setup"}),"\n"]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"thats-it-",children:"That's It! \ud83c\udf89"}),"\n",(0,a.jsx)(t.p,{children:"You're ready to start evaluating LLM output using EvalSharp for both large-scale dataset evaluations and quick, targeted unit tests."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);